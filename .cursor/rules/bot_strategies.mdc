---
description: 
globs: bots/kevin_link/**
alwaysApply: false
---
# Bot Strategies and Tactics

## Core Decision Framework

When designing your bot, consider implementing these decision-making components:

1. **Targeting System**: Choose optimal targets for spells
2. **Resource Management**: Handle HP and mana efficiently
3. **Positional Strategy**: Control board position for advantage
4. **Spell Selection**: Choose the right spell for each situation
5. **Defensive Logic**: Know when to retreat or use defensive spells

## Common Utility Functions

### Distance Calculations

```python
def chebyshev_distance(a, b):
    """Maximum of coordinate differences (for spell ranges)"""
    return max(abs(a[0] - b[0]), abs(a[1] - b[1]))

def manhattan_distance(a, b):
    """Sum of coordinate differences (for movement)"""
    return abs(a[0] - b[0]) + abs(a[1] - b[1])
```

### Position Helpers

```python
def move_toward(start, target):
    """Calculate movement direction toward a target"""
    dx = target[0] - start[0]
    dy = target[1] - start[1]
    step_x = 1 if dx > 0 else -1 if dx < 0 else 0
    step_y = 1 if dy > 0 else -1 if dy < 0 else 0
    return [step_x, step_y]

def move_away(start, target):
    """Calculate movement direction away from a target"""
    dx = target[0] - start[0]
    dy = target[1] - start[1]
    step_x = -1 if dx > 0 else 1 if dx < 0 else 0
    step_y = -1 if dy > 0 else 1 if dy < 0 else 0
    return [step_x, step_y]
```

## Effective Strategies

### Offensive

1. **Fireball Range Control**: Stay at exactly 5 tiles away to maximize fireball usage
2. **Minion Management**: Use minions to pressure opponent and control space
3. **Melee Finishing**: Close in for melee attacks when opponent is low on health

### Defensive

1. **Resource Control**: Prioritize artifact collection when low on resources
2. **Shield Timing**: Use shield when you expect to be attacked
3. **Health Management**: Cast heal when between 50-80 HP for efficiency

### Tactical

1. **Space Control**: Position to cut off opponent's movement options
2. **Teleport Escape**: Save teleport for critical situations
3. **Blink Positioning**: Use blink for quick repositioning

## Decision Priority Framework

Consider implementing a priority-based decision system:

1. **Emergency Actions**: Shield when low HP, teleport to escape
2. **Opportunity Actions**: Attack when in range, collect nearby artifacts
3. **Strategic Actions**: Position for future advantage, summon minions
4. **Default Actions**: Move toward opponent or valuable artifacts

## Advanced Techniques

1. **State Prediction**: Anticipate opponent's next move
2. **Cooldown Tracking**: Track opponent's spell usage to predict availability
3. **Tile Control**: Create a heatmap of board value
4. **Damage Calculation**: Optimize spell selection based on damage potential
5. **Path Planning**: Plan multi-turn movement sequences
